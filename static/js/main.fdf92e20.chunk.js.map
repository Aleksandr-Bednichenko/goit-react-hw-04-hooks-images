{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","App.module.css","Components/Button/Button.module.css","Components/Loader/Loader.module.css","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Api/Api.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/Loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","imgName","setImgName","className","styles","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","placeholder","name","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","src","largeImg","alt","ImageGalleryItemImage","height","width","ImageGallery","images","onImgClick","onClick","map","id","webformatURL","largeImageURL","fetchImg","page","fetch","then","response","ok","json","Promise","reject","Error","propTypes","PropTypes","string","isRequired","api","Button","onBtnClick","text","btn","Modal","onCloseModal","children","useEffect","window","addEventListener","onKeydownClick","removeEventListener","e","code","Overlay","Load","loader","color","timeout","React","Component","App","setPage","setImages","isLoading","setIsLoading","currentImages","setCurrentImages","openModal","setOpenModal","a","loaderToggle","imgApi","prevState","hits","finally","fetchImages","prev","toggleModal","target","nodeName","dataset","img","length","setTimeout","scrollBy","top","document","documentElement","clientHeight","behavior","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,yBAAyB,iDAAiD,sBAAwB,kD,mBCAlLD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,uCCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,mCAAmC,mBAAmB,sC,iKCoDvRC,MAhDf,YAAgC,IAAZC,EAAW,EAAXA,SAEpB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAmBI,OACE,wBAAQC,UAAWC,IAAON,UAA1B,SACE,uBAAMC,SAdQ,SAAAM,GAClBA,EAAMC,iBAEiB,KAAnBL,EAAQM,QAIZR,EAASE,GACTC,EAAW,KAJTM,IAAMC,MAAM,kJAUoBN,UAAWC,IAAOM,WAAhD,UACE,wBAAQC,KAAK,SAASR,UAAWC,IAAOQ,iBAAxC,SACE,sBAAMT,UAAWC,IAAOS,sBAAxB,sBAGF,uBACEV,UAAWC,IAAOU,gBAClBH,KAAK,OAGLI,YAAY,2BACZC,KAAK,UACLC,MAAOhB,EACPiB,SA/Bc,SAAAb,GACxBH,EAAWG,EAAMc,cAAcF,MAAMG,wB,iBCYxBC,EAnBU,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAKC,EAAP,EAAOA,SAAP,OACvB,oBAAIpB,UAAWC,IAAOiB,iBAAtB,SACE,qBACEC,IAAKA,EACLE,IAAI,GACJrB,UAAWC,IAAOqB,sBAClB,WAAUF,EACVG,OAAO,MACPC,MAAM,W,iBCWGC,EAnBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAC9B,OACE,oBAAI3B,UAAWC,IAAOwB,aAAcG,QAASD,EAA7C,SACGD,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAArB,OACV,cAAC,EAAD,CAEEb,IAAKY,EACLX,SAAUY,GAFLF,S,iCCPf,SAASG,EAASpB,EAAMqB,GAEtB,OAAOC,MAAM,8BAAD,OACoBtB,EADpB,iBACiCqB,EADjC,gBADA,qCACA,yDAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,0HAAmC7B,QAI7DoB,EAASU,UAAY,CACnB9B,KAAM+B,IAAUC,OAAOC,WACvBZ,KAAMU,IAAUC,OAAOC,YAGzB,IAIeC,EAJH,CACVd,Y,iBCNae,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,KAAf,OACb,wBAAQlD,UAAWC,IAAOkD,IAAK3C,KAAK,SAASoB,QAASqB,EAAtD,SACGC,K,iBCFU,SAASE,EAAT,GAA2C,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,SAE9CC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WAAKF,OAAOG,oBAAoB,UAAUD,OAIlD,IAAMA,EAAiB,SAAAE,GACL,WAAXA,EAAEC,MACJR,KAIF,OACE,qBAAKrD,UAAWC,IAAO6D,QAASlC,QAASyB,EAAzC,SACE,qBAAKrD,UAAWC,IAAOmD,MAAvB,SAA+BE,M,8EChBlBS,E,4JAEnB,WACE,OACE,qBAAK/D,UAAWC,IAAO+D,OAAvB,SACE,cAAC,IAAD,CACExD,KAAK,WACLyD,MAAM,UACN1C,OAAQ,GACRC,MAAO,GACP0C,QAAS,Y,GAVeC,IAAMC,WCiGzBC,MA1Ff,WAEE,MAA8BxE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOqC,EAAP,KAAaoC,EAAb,KACA,EAA4BzE,mBAAS,IAArC,mBAAO6B,EAAP,KAAe6C,EAAf,KACA,EAAkC1E,oBAAS,GAA3C,mBAAO2E,EAAP,KAAkBC,EAAlB,KACA,EAA0C5E,mBAAS,IAAnD,mBAAO6E,EAAP,KAAsBC,EAAtB,KACA,EAAkC9E,oBAAS,GAA3C,mBAAO+E,EAAP,KAAkBC,EAAlB,KAEAtB,qBAAU,WAELzD,GAEc,uCAAI,sBAAAgF,EAAA,6DACrBC,IADqB,kBAIZC,EACJ/C,SAASnC,EAASoC,GAClBE,MAAK,SAAAV,GAAM,OACV6C,GAAU,SAAAU,GAAS,4BAAQA,GAAR,YAAsBvD,EAAOwD,aAGjDC,SAAQ,kBAAMJ,QAVE,2CAAJ,oDAanBK,KAEE,CAACtF,EAASoC,IAEZ,IAyBM6C,EAAe,WACnBN,GAAa,SAAAY,GAAI,OAAKA,MAWlBC,EAAc,WAClBT,GAAa,SAAAQ,GAAI,OAAKA,MAGtB,OACE,sBAAKrF,UAAWC,IAAOoE,IAAvB,UACE,cAAC,EAAD,CAAWzE,SAjCY,SAAAE,GAC5BC,EAAWD,GACXwE,EAAQ,GACRC,EAAU,OA+BL,cAAC,EAAD,CAAc7C,OAAQA,EAAQC,WAfjB,SAAAiC,GACS,QAAtBA,EAAE2B,OAAOC,WAGbb,EAAiBf,EAAE2B,OAAOE,QAAQC,KAClCJ,QAWKd,GAAa,cAAC,EAAD,IACb9C,EAAOiE,OAAS,IAAMnB,GACrB,cAAC,EAAD,CAAQvB,WA/BE,WAChBqB,GAAQ,SAAAe,GAAI,OAAIA,EAAO,KACnBvF,IACFiF,IAlBFa,YAAW,WACTpC,OAAOqC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAAe,IAC7CC,SAAU,aAEX,KAeDnB,MA0BoC7B,KAAM,8EAExC,cAAC,IAAD,CAAgBiD,UAAW,MAE1BvB,GACC,cAACxB,EAAD,CAAOC,aAAciC,EAArB,SACE,qBAAKnE,IAAKuD,EAAerD,IAAI,8BClF1B+E,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BX,M","file":"static/js/main.fdf92e20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__33-Xu\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__5Etg-\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage___rlEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__Syns0\",\"Modal\":\"Modal_Modal__3HF7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2yknC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__32pEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3LgVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1H9IW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__37bXc\",\"SearchForm\":\"Searchbar_SearchForm__21cPF\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1j6Mz\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3tNBJ\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2o1xO\",\"SearchForm-input\":\"Searchbar_SearchForm-input__27zcY\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport styles from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({onSubmit}) {\n  \nconst [imgName, setImgName] = useState('');\n  \n\n const handleNameChange = event => {\n  setImgName(event.currentTarget.value.toLowerCase());\n  };\n\n const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imgName.trim() === '') {\n      toast.error('Введите название картинки.');\n      return;\n    }\n    onSubmit(imgName);\n    setImgName('');\n  };\n\n  \n    return (\n      <header className={styles.Searchbar}>\n        <form onSubmit={handleSubmit} className={styles.SearchForm}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            //   autocomplete=\"off\"\n            //   autofocus\n            placeholder=\"Search images and photos\"\n            name=\"imgName\"\n            value={imgName}\n            onChange={handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport styles from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({src, largeImg }) => (\n  <li className={styles.ImageGalleryItem} >\n    <img\n      src={src}\n      alt=\"\"\n      className={styles.ImageGalleryItemImage}\n      data-img={largeImg}\n      height=\"240\"\n      width=\"320\"\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  \n  src: PropTypes.string.isRequired,\n  largeImg: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onImgClick }) => {\n  return (\n    <ul className={styles.ImageGallery} onClick={onImgClick}>\n      {images.map(({ id, webformatURL, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          largeImg={largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.object),\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction fetchImg(name, page) {\n  const key = '21991810-52bb16b7f0c761b580b9c00ed';\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Нет картинки с именем ${name}`));\n  });\n}\n\nfetchImg.propTypes = {\n  name: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\nconst api = {\n  fetchImg,\n};\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst Button = ({ onBtnClick, text }) => (\n  <button className={styles.btn} type=\"button\" onClick={onBtnClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nexport default function Modal ({onCloseModal, children}) {\n\nuseEffect(()=>{\n  window.addEventListener('keydown', onKeydownClick)\n  return ()=>{window.removeEventListener('keydown',onKeydownClick)}\n})\n\n\n const onKeydownClick = e => {\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n    \n    return (\n      <div className={styles.Overlay} onClick={onCloseModal}>\n        <div className={styles.Modal}>{children}</div>\n      </div>\n    );\n  }\n\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func,\n};","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\nexport default class Load extends React.Component {\n  //other logic\n  render() {\n    return (\n      <div className={styles.loader}>\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import {useState, useEffect} from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport styles from './App.module.css';\nimport imgApi from './Components/Api';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Load from './Components/Loader';\n\nfunction App () {\n  \n  const [imgName, setImgName] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentImages, setCurrentImages] = useState('');\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(()=>{\n\n  if (!imgName) return;\n\n    const fetchImages  = async () =>  {\n    loaderToggle();\n    \n      \n      return imgApi\n        .fetchImg(imgName, page)\n        .then(images =>\n          setImages(prevState => [...prevState, ...images.hits]\n          )\n        )\n        .finally(() => loaderToggle());\n    \n  };\n  fetchImages();\n\n  },[imgName, page])\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: \"smooth\",\n      });\n    }, 800);\n  };\n  \n\n const handleSearchbarSubmit = imgName => {\n   setImgName(imgName);\n   setPage(1);\n   setImages([]);\n  };\n\n const OnLoadMore = () => {\n    setPage(prev => prev + 1);\n    if (imgName) {\n      loaderToggle();\n      scrollPage();\n      loaderToggle();\n    }\n  };\n\n  const loaderToggle = () => {\n    setIsLoading(prev => !prev);\n  };\n\n  const onImgClick = e => {\n    if (e.target.nodeName !== 'IMG') {\n      return;\n    }\n    setCurrentImages(e.target.dataset.img);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setOpenModal(prev => !prev);\n  };\n\n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={handleSearchbarSubmit} />\n        <ImageGallery images={images} onImgClick={onImgClick} />\n        {isLoading && <Load />}\n        {images.length > 0 && !isLoading && (\n          <Button onBtnClick={OnLoadMore} text={'Загрузить еще'} />\n        )}\n        <ToastContainer autoClose={3000} />\n\n        {openModal && (\n          <Modal onCloseModal={toggleModal}>\n            <img src={currentImages} alt=\"Dont Worry Be Happy\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}